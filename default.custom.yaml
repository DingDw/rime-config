customization:
  distribution_code_name: Weasel
  distribution_version: 0.16.3
  generator: "Rime::SwitcherSettings"
  modified_time: "Mon Mar 17 16:44:04 2025"
  rime_version: 1.11.2
patch:
  schema_list: #这种会覆盖schema_list下的所有配置
    - {schema: rime_ice}
  
  menu:
    page_size: 7
    alternative_select_labels: [ ①, ②, ③, ④, ⑤, ⑥, ⑦, ⑧, ⑨, ⑩ ]  # 修改候选项标签

  ascii_composer:
    good_old_caps_lock: true  # true | false
    switch_key:
      Caps_Lock: clear      # commit_code | commit_text | clear
      Shift_L: commit_code  # commit_code | commit_text | inline_ascii | clear | noop
      Shift_R: inline_ascii # commit_code | commit_text | inline_ascii | clear | noop
      Control_L: noop       # commit_code | commit_text | inline_ascii | clear | noop
      Control_R: noop       # commit_code | commit_text | inline_ascii | clear | noop


  # 快捷键
  key_binder:
    # Lua 配置: 以词定字（上屏当前词句的第一个或最后一个字），和中括号翻页有冲突
    select_first_character: "comma"  # 逗号
    select_last_character: "period"  # .
  
    bindings:
      # Tab / Shift+Tab 切换光标至下/上一个拼音
      - { when: composing, accept: Shift+Tab, send: Shift+Left }
      - { when: composing, accept: Tab, send: Shift+Right }

      # 翻页 - =
      - { when: has_menu, accept: minus, send: Page_Up }  # 上一页设置为 paging 时会导致直接上屏并输出减号
      - { when: has_menu, accept: equal, send: Page_Down }
  
      # 翻页 , .
      # - { when: paging, accept: comma, send: Page_Up }
      # - { when: has_menu, accept: period, send: Page_Down }
  
      # 翻页 [ ]  ⚠️ 开启时请修改上面以词定字的快捷键
      - { when: paging, accept: bracketleft, send: Page_Up }
      - { when: has_menu, accept: bracketright, send: Page_Down }
  
      # 两种按键配置，鼠须管 Control+Shift+4 生效，小狼毫 Control+Shift+dollar 生效，都写上了。
      # numbered_mode_switch:
      # - { when: always, select: .next, accept: Control+Shift+1 }                  # 在最近的两个方案之间切换
      # - { when: always, select: .next, accept: Control+Shift+exclam }             # 在最近的两个方案之间切换
      - { when: always, toggle: ascii_mode, accept: Shift_L }             # 切换中英
      - { when: always, toggle: ascii_mode, accept: Shift_R }            # 切换中英
      # - { when: always, toggle: ascii_punct, accept: Control+Shift+3 }              # 切换中英标点
      # - { when: always, toggle: ascii_punct, accept: Control+Shift+numbersign }     # 切换中英标点
      # - { when: always, toggle: traditionalization, accept: Control+Shift+4 }       # 切换简繁
      # - { when: always, toggle: traditionalization, accept: Control+Shift+dollar }  # 切换简繁
      # - { when: always, toggle: full_shape, accept: Control+Shift+5 }             # 切换全半角
      # - { when: always, toggle: full_shape, accept: Control+Shift+percent }       # 切换全半角
  
      # emacs_editing:
      - { when: composing, accept: Control+p, send: Up }
      - { when: composing, accept: Control+n, send: Down }
      - { when: composing, accept: Control+b, send: Left }
      - { when: composing, accept: Control+f, send: Right }
      # - { when: composing, accept: Control+a, send: Home }
      # - { when: composing, accept: Control+e, send: End }
      # - { when: composing, accept: Control+d, send: Delete }
      # - { when: composing, accept: Control+k, send: Shift+Delete }
      # - { when: composing, accept: Control+h, send: BackSpace }
      # - { when: composing, accept: Control+g, send: Escape }
      # - { when: composing, accept: Control+bracketleft, send: Escape }
      # - { when: composing, accept: Control+y, send: Page_Up }
      # - { when: composing, accept: Alt+v, send: Page_Up }
      # - { when: composing, accept: Control+v, send: Page_Down }
  
      # optimized_mode_switch:
      # - { when: always, accept: Control+Shift+space, select: .next }
      # - { when: always, accept: Shift+space, toggle: ascii_mode }
      # - { when: always, accept: Control+comma, toggle: full_shape }
      # - { when: always, accept: Control+period, toggle: ascii_punct }
      # - { when: always, accept: Control+slash, toggle: traditionalization }
  
      # 将小键盘 0~9 . 映射到主键盘，数字金额大写的 Lua 如 R1234.5678 可使用小键盘输入
      - {accept: KP_0, send: 0, when: composing}
      - {accept: KP_1, send: 1, when: composing}
      - {accept: KP_2, send: 2, when: composing}
      - {accept: KP_3, send: 3, when: composing}
      - {accept: KP_4, send: 4, when: composing}
      - {accept: KP_5, send: 5, when: composing}
      - {accept: KP_6, send: 6, when: composing}
      - {accept: KP_7, send: 7, when: composing}
      - {accept: KP_8, send: 8, when: composing}
      - {accept: KP_9, send: 9, when: composing}
      - {accept: KP_Decimal, send: period, when: composing}
      # 将小键盘 + - * / 映射到主键盘，使计算器 如 1+2-3*4 可使用小键盘输入
      - {accept: KP_Multiply, send: asterisk, when: composing}
      - {accept: KP_Add,      send: plus,     when: composing}
      - {accept: KP_Subtract, send: minus,    when: composing}
      - {accept: KP_Divide,   send: slash,    when: composing}
